services:

  # ====Dependency related services================================================================
  dependencies-general:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-dependencies-general:${NBS_IMAGE_TAG:?err}
    build:
      target: libpointmatcher-dependencies-general
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        BASE_IMAGE: ${DEPENDENCIES_BASE_IMAGE:?err}
        BASE_IMAGE_TAG: ${DEPENDENCIES_BASE_IMAGE_TAG:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        NBS_LIB_INSTALL_PATH: ${NBS_LIB_INSTALL_PATH:?err}
        NBS_REPOSITORY_NAME: ${NBS_REPOSITORY_NAME:?err}
    tty: true
    stdin_open: true
    init: true  # Propagate exit code (See remark in task NMO-266)

  dependencies:
    extends: dependencies-general
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-dependencies:${NBS_IMAGE_TAG:?err}
    build:
      target: libpointmatcher-dependencies-libnabo

  dependencies-doc:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-dependencies-doc:${NBS_IMAGE_TAG:?err}
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies_doc
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        PROJECT_HUB: ${NBS_DOCKERHUB_NAMESPACE}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${NBS_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
    tty: true
    stdin_open: true

  # ====Pull-request related services==============================================================
  _test_compilation:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-compilation-test:${NBS_IMAGE_TAG:?err}
    pull_policy: build
    build:
      context: ..
      dockerfile: './build_system/ubuntu/Dockerfile.libpointmatcher_test_compilation'
      target: test-compilation-auto-path-resolution
      ## Mute 'platforms' while using arch virtualization with C++ build to prevent segmentation fault during lpm cmake install
#      platforms:
#        - "linux/amd64"
#        - "linux/arm64/v8"
      args:
        PROJECT_HUB: ${NBS_DOCKERHUB_NAMESPACE}
        BASE_IMAGE: libpointmatcher-dependencies-general
        BASE_IMAGE_TAG: ${NBS_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        REPOSITORY_VERSION: 'latest'
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: ${LIBPOINTMATCHER_CMAKE_BUILD_TYPE:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install'
    tty: true
    stdin_open: true
    init: true  # Propagate exit code (See remark in task NMO-266)
    depends_on:
      - dependencies-general
  test_compilation_prefixed_path:
    extends: _test_compilation
    build:
      target: test-compilation-prefixed-path
    depends_on:
      - _test_compilation
  test_compilation_auto_path_resolution:
    extends: _test_compilation
    build:
      target: test-compilation-auto-path-resolution
    depends_on:
      - _test_compilation

  ci_PR:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-ci-pr:${NBS_IMAGE_TAG:?err}
    pull_policy: build
    build:
      context: ..
      dockerfile: './build_system/ubuntu/Dockerfile.libpointmatcher_ci_PR'
      no_cache: true
      args:
        PROJECT_HUB: ${NBS_DOCKERHUB_NAMESPACE}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${NBS_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        REPOSITORY_VERSION: 'latest'
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: ${LIBPOINTMATCHER_CMAKE_BUILD_TYPE:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install --compile-test'
    tty: true
    stdin_open: true
    init: true  # Propagate exit code (See remark in task NMO-266)
    depends_on:
      - dependencies
  ci_PR_amd64:
    extends: ci_PR
    build:
      platforms:
        - "linux/amd64"
  ci_PR_arm64v8:
    extends: ci_PR
    build:
      platforms:
        - "linux/arm64/v8"

  # ====Build system assessment services===========================================================
  ci_SITREP_matrix:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher-ci-sitrep-matrix:${NBS_IMAGE_TAG:?err}
    pull_policy: build
    build:
      context: ..
      dockerfile: './build_system/ubuntu/Dockerfile.libpointmatcher_ci_SITREP_matrix'
      no_cache: true
      args:
        PROJECT_HUB: ${NBS_DOCKERHUB_NAMESPACE}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${NBS_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        REPOSITORY_VERSION: ${REPOSITORY_VERSION:?err}
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: ${LIBPOINTMATCHER_CMAKE_BUILD_TYPE:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--compile-test'
    tty: true
    stdin_open: true
    init: true  # Propagate exit code (See remark in task NMO-266)
  ci_SITREP_matrix_amd64:
    extends: ci_SITREP_matrix
    platform: "linux/amd64"
  ci_SITREP_matrix_arm64v8:
    extends: ci_SITREP_matrix
    platform: "linux/arm64/v8"

  # ====Dockerhub release image====================================================================
  release:
    image: ${NBS_DOCKERHUB_NAMESPACE:?err}/libpointmatcher:${NBS_IMAGE_TAG:?err}
    container_name: libpointmatcher
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      no_cache: true
      args:
        PROJECT_HUB: ${NBS_DOCKERHUB_NAMESPACE}
        BASE_IMAGE: libpointmatcher-dependencies-doc
        BASE_IMAGE_TAG: ${NBS_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        REPOSITORY_VERSION: ${REPOSITORY_VERSION:?err}
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: 'Release'
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--compile-test --generate-doc'
    tty: true
    stdin_open: true
    init: true  # Propagate exit code (See remark in task NMO-266)
    depends_on:
      - dependencies
      - dependencies-doc


